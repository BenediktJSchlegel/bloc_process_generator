import 'package:bloc_process/bloc_process.dart';
import 'package:flutter_bloc/flutter_bloc.dart';

import '../process/io/{ph}_input.dart';
import '../process/io/{ph}_output.dart';
import 'event/{ph}_event.dart';
import 'state/{ph}_state.dart';

class XXXBloc extends ProcessBloc<XXXInput, XXXEvent, XXXState, XXXOutput> {
  XXXBloc() : super(const XXXState.initial()) {
    on<XXXEvent>((XXXEvent event, Emitter<XXXState> emit) async {
      switch (event.runtimeType) {}
    });
  }

  @override
  void initialize(XXXInput input) {
    // TODO: implement initialize
    throw UnimplementedError();
  }
}
